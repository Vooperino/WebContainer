name: Build Container Template

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      image_name:
        description: 'Name of the Docker image to build'
        required: true
        type: string
      image_tag:
        description: 'Tag for the Docker image'
        required: true
        type: string
        default: 'dev'
      type: 
        description: 'Type of build (core, nginx, openresty)'
        required: true
        type: string
      core_image:
        description: 'Core image to use for nginx/openresty builds'
        required: false
        type: string
        default: 'vooplv/webcontainer:core-dev'

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  validate:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Validate Arguments
        run: |
          if [ -z "${{ inputs.image_name }}" ]; then
            echo "::error title=Config Error::Image name is required"
            exit 1
          fi
          if [ -z "${{ inputs.image_tag }}" ]; then
            echo "::error title=Config Error::Image tag is required"
            exit 1
          fi
          if [ -z "${{ inputs.type }}" ]; then
            echo "::error title=Config Error::Build type is required"
            exit 1
          fi
          if [[ "${{ inputs.type }}" != "core" && "${{ inputs.type }}" != "nginx" && "${{ inputs.type }}" != "openresty" ]]; then
            echo "::error title=Config Error::Invalid build type. Must be 'core', 'nginx', or 'openresty'"
            exit 1
          fi

          echo "Build type: ${{ inputs.type }}"
          echo "Image name: ${{ inputs.image_name }}"
          echo "Image tag: ${{ inputs.image_tag }}"
  build:
    runs-on: ${{ inputs.runner }}
    needs: ["validate"]
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Build Docker image
        run: |
          cd .build
          chmod +x build-images.sh
          BSH_ARG=""

          if [ "${{ inputs.type }}" = "core" ]; then
            BSH_ARG="--core-only"
          fi
          if [ "${{ inputs.type }}" = "nginx" ]; then
            CI_CORE_CONTAINER=${{ inputs.core_image }}
            BSH_ARG="--nginx-only"
          fi
          if [ "${{ inputs.type }}" = "openresty" ]; then
            CI_CORE_CONTAINER=${{ inputs.core_image }}
            BSH_ARG="--openresty-only"
          fi

          if [ ! -z "${{ inputs.image_tag }}" ]; then
            export CI_TAG_OVERRIDE=${{ inputs.image_tag }}
          fi

          if [ ! -z "${{ inputs.image_name }}" ]; then
            export CI_BASENAME_OVERRIDE=${{ inputs.image_name }}
          fi

          if [ ! -z "${CI_CORE_CONTAINER}" ]; then
            echo "[INFO] Using core image override: ${CI_CORE_CONTAINER}"
          fi

          ./build-images.sh $BSH_ARG
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'image'
          image-ref: '${{ inputs.image_name }}:${{ inputs.type }}-${{ inputs.image_tag }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          ignore-unfixed: true
          hide-progress: true
          exit-code: 0
          vuln-type: 'os,library'
          output: 'trivy-results-${{ inputs.image_name }}-${{ inputs.type }}-${{ inputs.image_tag }}.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results-${{ inputs.image_name }}-${{ inputs.type }}-${{ inputs.image_tag }}.sarif'
      #- name: Run Trivy vulnerability scanner
      #  uses: aquasecurity/trivy-action@${{ vars.trivy_version }}
      #  with:
      #    scan-type: 'image'
      #    image-ref: '${{ inputs.image_name }}:${{ inputs.type }}-${{ inputs.image_tag }}'
      #    format: 'table'
      #    ignore-unfixed: true
      #    hide-progress: true
      #    exit-code: 0
      #    vuln-type: 'os,library'
      #    output: 'trivy-results-${{ inputs.image_name }}-${{ inputs.type }}-${{ inputs.image_tag }}.txt'
      #- name: Add results to summary
      #  if: always()
      #  run: |
      #    echo "## Trivy Scan Results" >> $GITHUB_STEP_SUMMARY
      #    echo "" >> $GITHUB_STEP_SUMMARY
      #    cat trivy-results-${{ inputs.image_name }}-${{ inputs.type }}-${{ inputs.image_tag }}.txt >> $GITHUB_STEP_SUMMARY
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push Docker image to Docker Hub
        run: |
          docker tag ${{ inputs.image_name }}:${{ inputs.type }}-${{ inputs.image_tag }} vooplv/${{ inputs.image_name }}:${{ inputs.type }}-${{ inputs.image_tag }}
          docker push vooplv/${{ inputs.image_name }}:${{ inputs.type }}-${{ inputs.image_tag }}
      - name: Log out from Docker Hub
        run: docker logout
      